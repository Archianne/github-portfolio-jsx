{"version":3,"sources":["components/_Hooks/useFetch.js","pages/blog_post.js","components/4__Content/index.js"],"names":["useFetch","URL","useState","error","setError","value","setValue","useEffect","fetch","headers","Accept","then","res","json","data","catch","err","console","log","BlogPost","props","slug","match","params","location","id","StyledPosts","fallback","to","content","body_html","styled","article","theme","fontColor1","Home","lazy","Repositories","Skills","Contact","Blog","StyledContent","Content","path","component","exact","section","boxBorder"],"mappings":"kIAsBeA,IApBE,SAACC,GAChB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WACRC,MAAMP,EAAK,CACTQ,QAAS,CAAEC,OAAQ,sBAElBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUR,EAASQ,MACxBC,OAAM,SAACC,GAAD,OAASZ,EAASY,QAC1B,CAACf,IAEAE,GACFc,QAAQC,IAAIb,GACL,wCAEF,CAACA,K,oHCSKc,EAtBE,SAACC,GAChB,IAAIC,EAAOD,EAAME,MAAMC,OAAOF,KAC9BJ,QAAQC,IAAIG,GACZJ,QAAQC,IAAIE,EAAMI,SAASC,GAAGA,IAE9B,IAAMxB,EAAG,sCAAkCmB,EAAMI,SAASC,GAAGA,IAC7D,EAAgBzB,YAASC,GAAlBI,EAAP,oBAGA,OAFAY,QAAQC,IAAIb,GAGV,cAACqB,EAAD,UACA,eAAC,WAAD,CAAUC,SAAU,0CAApB,UAEE,qBAAKF,GAAG,SAAR,SACE,cAAC,IAAD,CAAMG,GAAG,QAAT,sBAEF,cAAC,IAAD,CAAQC,QAASxB,EAAMyB,kBAQvBJ,EAAcK,IAAOC,QAAV,6QAoBJ,SAACZ,GAAD,OAAWA,EAAMa,MAAMC,cC7C9BC,EAAOC,gBAAK,kBAAM,iCAClBC,EAAeD,gBAAK,kBAAM,iCAC1BE,EAASF,gBAAK,kBAAM,iCACpBG,EAAUH,gBAAK,kBAAM,iCACrBI,EAAOJ,gBAAK,kBAAM,gCAuBlBK,GAFSC,UAnBC,WACd,OACE,cAACD,EAAD,CAAehB,GAAG,UAAlB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUE,SAAU,0CAApB,UACE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,UAAWT,EAAMU,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWN,IACjC,cAAC,IAAD,CAAOK,KAAK,gBAAgBC,UAAWP,IACvC,cAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWL,IAClC,cAAC,IAAD,CAAOI,KAAK,SAASC,UAAWJ,IAChC,cAAC,IAAD,CAAOG,KAAK,cAAcC,UAAWzB,cAU3BY,IAAOe,QAAV,gQAKG,SAAC1B,GAAD,OAAWA,EAAMa,MAAMc","file":"static/js/13.ed0660cc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (URL) => {\r\n  const [error, setError] = useState(null);\r\n  const [value, setValue] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(URL, {\r\n      headers: { Accept: \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setValue(data))\r\n      .catch((err) => setError(err));\r\n  }, [URL]);\r\n\r\n  if (error) {\r\n    console.log(value);\r\n    return <p>Error!</p>;\r\n  }\r\n  return [value];\r\n};\r\n\r\nexport default useFetch;\r\n","import { Markup } from \"interweave\";\r\nimport { Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport useFetch from \"../components/_Hooks/useFetch\";\r\n\r\nconst BlogPost = (props) => {\r\n  var slug = props.match.params.slug;\r\n  console.log(slug);\r\n  console.log(props.location.id.id);\r\n\r\n  const URL = `https://dev.to/api/articles/${props.location.id.id}`;\r\n  const [value] = useFetch(URL);\r\n  console.log(value);\r\n\r\n  return (\r\n    <StyledPosts>\r\n    <Suspense fallback={<div>Loading</div>}>\r\n\r\n      <div id=\"return\">\r\n        <Link to=\"/blog\">Return</Link>\r\n      </div>\r\n      <Markup content={value.body_html} />\r\n    </Suspense>\r\n    </StyledPosts>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nconst StyledPosts = styled.article`\r\n  #return {\r\n    text-align: center;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  img {\r\n    width: 20px;\r\n  }\r\n\r\n  a {\r\n    color: orange;\r\n    text-decoration: none;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    margin-top: 20px;\r\n    color: ${(props) => props.theme.fontColor1};\r\n  }\r\n`;\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport BlogPost from \"../../pages/blog_post\";\r\n\r\nconst Home = lazy(() => import(\"../../pages/home\"));\r\nconst Repositories = lazy(() => import(\"../../pages/repositories\"));\r\nconst Skills = lazy(() => import(\"../../pages/skills\"));\r\nconst Contact = lazy(() => import(\"../../pages/contact\"));\r\nconst Blog = lazy(() => import(\"../../pages/blog\"));\r\n\r\nconst Content = () => {\r\n  return (\r\n    <StyledContent id=\"content\">\r\n      <Router>\r\n        <Switch>\r\n          <Suspense fallback={<div>Loading</div>}>\r\n            <Route path=\"/\" component={Home} exact />\r\n            <Route path=\"/skills\" component={Skills} />\r\n            <Route path=\"/repositories\" component={Repositories} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/blog/\" component={Blog} />\r\n            <Route path=\"/post/:slug\" component={BlogPost} />\r\n          </Suspense>\r\n        </Switch>\r\n      </Router>\r\n    </StyledContent>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\nconst StyledContent = styled.section`\r\n  width: 70%;\r\n  max-width: 936px;\r\n  margin: 40px 24px 0 8px;\r\n  padding: 24px;\r\n  border: 1px solid ${(props) => props.theme.boxBorder};\r\n  border-radius: 6px;\r\n\r\n  @media (max-width: 768px) {\r\n    border: none;\r\n    margin: 8px 0;\r\n    padding: 30px;\r\n  }\r\n`;\r\n"],"sourceRoot":""}